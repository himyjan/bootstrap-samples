@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="container">

    <div class="d-flex mb-4">
        <div class="form-check form-switch ms-auto mt-3 me-3">
            <label class="form-check-label ms-3" for="lightSwitch" arial-label="toggle screen light or dark">
                <svg xmlns="http://www.w3.org/2000/svg"
                     width="25"
                     height="25"
                     aria-label="click to toggle light/dark mode"
                     fill="currentColor"
                     class="bi bi-brightness-high"
                     viewBox="0 0 16 16">
                    <path d="M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z" />
                </svg>
            </label>
            <input class="form-check-input"
                   type="checkbox"
                   id="lightSwitch" />
        </div>
    </div>

    <form class="row g-3 border bg-dark-subtle">
        <h1 class="fs-4">Data entry</h1>
        <div class="col-md-4">
            <label for="validationCustom01" class="form-label">First name</label>
            <input type="text" class="form-control" id="validationCustom01" value="Karen" required>
            <div class="valid-feedback">
                Looks good!
            </div>
        </div>
        <div class="col-md-4">
            <label for="validationCustom02" class="form-label">Last name</label>
            <input type="text" class="form-control" id="validationCustom02" value="Payne" required>
            <div class="valid-feedback">
                Looks good!
            </div>
        </div>
        <div class="col-md-4">
            <label for="validationCustomUsername" class="form-label">Username</label>
            <div class="input-group has-validation">
                
                <span class="input-group-text" id="inputGroupPrepend">@@</span>

                <input type="text" 
                       class="form-control" 
                       id="validationCustomUsername" 
                       aria-describedby="inputGroupPrepend" 
                       value="karenoregon" 
                       required>

                <div class="invalid-feedback">
                    Please choose a username.
                </div>

            </div>
        </div>
        <div class="col-md-6">
            <label for="validationCustom03" class="form-label">City</label>
            <input type="text" class="form-control" id="validationCustom03" required>
            <div class="invalid-feedback">
                Please provide a valid city.
            </div>
        </div>
        <div class="col-md-3">
            <label for="validationCustom04" class="form-label">State</label>
            <select class="form-select" id="validationCustom04" required>
                <option selected disabled value="">Choose...</option>
                <option>Oregon</option>
                <option>Washington</option>
                <option>California</option>
            </select>
            <div class="invalid-feedback">
                Please select a valid state.
            </div>
        </div>
        <div class="col-md-3">
            <label for="validationCustom05" class="form-label">Zip</label>
            <input type="text" class="form-control" id="validationCustom05" required>
            <div class="invalid-feedback">
                Please provide a valid zip.
            </div>
        </div>
        <div class="col-12">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="" id="invalidCheck" required>
                <label class="form-check-label" for="invalidCheck">
                    Agree to terms and conditions
                </label>
                <div class="invalid-feedback ">
                    You must agree before submitting.
                </div>
            </div>
        </div>
        <div class="col-12 mb-5">
            <button class="btn" id="btnSubmit" type="submit">Submit form</button>
        </div>
    </form>


</div>

@*
    All scripting below will be refactored into a class
*@

@section Scripts
    {
    <script src="~/lib/bootstrap/js/bootstrapThemeToggler.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            if (localStorage.getItem("theme") === null) {
                localStorage.setItem('theme', 'light');
            } else {
                var theme = localStorage.getItem("theme");
                document.documentElement.setAttribute('data-bs-theme', theme);
                if (theme === 'dark') {
                    document.getElementById("lightSwitch").checked = true;
                } else {
                    document.getElementById("lightSwitch").checked = false;
                }

            }

            toggleMode();

        });

        document.getElementById("lightSwitch").addEventListener("click", function () {

            if (document.getElementById("lightSwitch").checked) {
                document.documentElement.setAttribute('data-bs-theme', 'dark');
                localStorage.setItem('theme', 'dark');
            } else {
                document.documentElement.setAttribute('data-bs-theme', 'light');
                localStorage.setItem('theme', 'light');
            }

            toggleMode();
        });

        function toggleMode() {

            var borderColor = '';

            var submitButton = document.getElementById('btnSubmit');
            submitButton.classList.remove('btn-primary');
            submitButton.classList.remove('btn-secondary');

            var currentTheme = localStorage.getItem("theme");

            if (currentTheme !== null) {
                if (currentTheme === 'light') {
                    borderColor = 'border-black';
                    submitButton.classList.add('btn-primary');
                } else {
                    borderColor = 'border-white';
                    submitButton.classList.add('btn-secondary');
                }
            }

            document.querySelectorAll('.nav-link').forEach(link => {

                link.classList.remove('border-bottom');
                link.classList.remove('border-top');
                link.classList.remove('border-white');

                if (link.getAttribute('href').toLowerCase() === location.pathname.toLowerCase()) {

                    link.classList.add(borderColor);
                    link.classList.add('border-bottom');
                    link.classList.add('border-top');
                } else {
                    link.classList.add(borderColor);
                }

            });
        }

    </script>
}
